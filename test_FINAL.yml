jobs:
- job: Windows_MustPass
  strategy:
    maxParallel: 10
    matrix:
      Node 0.10:
        NODE_VERSION: '0.10'
      Node 0.12:
        NODE_VERSION: '0.12'
      Node 1.8:
        NODE_VERSION: '1.8'
      Node 2.5:
        NODE_VERSION: '2.5'
      Node 3.3:
        NODE_VERSION: '3.3'
      Node 4.9:
        NODE_VERSION: '4.9'
      Node 5.12:
        NODE_VERSION: '5.12'
      Node 6.14:
        NODE_VERSION: '6.14'
      Node 7.10:
        NODE_VERSION: '7.10'
      Node 8.12:
        NODE_VERSION: '8.12'
      

  continueOnError: false
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  
  - powershell: |
      #in order to get iojs versions to install correctly, created our own install task.
      $iojsValues = '1.8','2.5','3.3'
      if ($(NODE_VERSION) -In $iojsValues)
      {
        $iojsUrl = "https://iojs.org/dist/index.json"
        $iojsList = Invoke-WebRequest -Uri $iojsUrl
        $iojsConverted = ConvertFrom-Json -InputObject $iojsList
        $matchValues = $iojsConverted | Where-Object {$_.version -match "v$(NODE_VERSION)"}
        $ver = $matchValues[0].version
        Write-Output("Installing Node Version $ver")
        $msi = "iojs-$ver-x64.msi"
        $iojsUrl = "https://iojs.org/dist/$ver/$msi"
        $file = Join-Path "$(agent.tempDirectory)" "$msi"
        Invoke-WebRequest -Uri $iojsUrl -OutFile $file
        $targetDir = "c:\myiojs"
        $MSIArguments = @("/a", "$file", "/qn", "TARGETDIR=$targetDir")
        Start-Process "msiexec.exe" -ArgumentList $MSIArguments -Wait -NoNewWindow
        $iojsDir = Join-Path "$targetDir" "iojs"
        $oldexe = Join-Path "$iojsdir" "iojs.exe"
        $newexe = Join-Path "$iojsdir" "node.exe"
        copy "$oldexe" "$newexe"
        $newPath = "$iojsDir;$env:Path"
        Write-Host "##vso[task.setvariable variable=PATH;]$newPath";
      }
      else
      {
        $nodejsUrl = "https://nodejs.org/dist/index.json"
        $nodejsList = Invoke-WebRequest -Uri $nodejsUrl
        $nodejsConverted = ConvertFrom-Json -InputObject $nodejsList
        $matchValues = $nodejsConverted | Where-Object {$_.version -match "v$(NODE_VERSION)"}
        $ver = $matchValues[0].version
        Write-Output("Installing Node Version $ver")
        if ($(NODE_VERSION) -eq "0.10")
        {
          $msi = "node-$ver-x86.msi"
        }
        elseif ($(NODE_VERSION) -eq "0.12")
        {
          $msi = "node-$ver-x86.msi"
        }
        else
        {
          $msi = "node-$ver-x64.msi"
        }
        $nodejsUrl = "https://nodejs.org/dist/$ver/$msi"
        $file = Join-Path "$(agent.tempDirectory)" "$msi"
        Invoke-WebRequest -Uri $nodejsUrl -OutFile $file
        $targetDir = "c:\mynodejs"
        $MSIArguments = @("/a", "$file", "/qn", "TARGETDIR=$targetDir")
        Start-Process "msiexec.exe" -ArgumentList $MSIArguments -Wait -NoNewWindow
        $nodejsDir = Join-Path "$targetDir" "nodejs"
        $newPath = "$nodejsDir;$env:Path"
        Write-Host "##vso[task.setvariable variable=PATH;]$newPath";
      }
    displayName: "Install Node"

  - powershell: |
      node --version
    displayName: "check node version"

